@typeparam TType
@inherits DataGridRadzenModel<TType>

<RadzenDataGrid 
	@ref="dataGrid"
	AllowColumnResize="true"
	AllowSorting="true"
	AllowPaging="true"
	PageSizeOptions="@PageSizeOptions"
	ShowPagingSummary="true"
	PagingSummaryFormat="@pagingSummaryFormat"
	AllowAlternatingRows="true"
	PageSizeChanged="@(args => pageSize = args)"
	Data="@Data"
	LoadData="@LoadData"
	IsLoading="@IsLoading" 
	TItem="@TType"
	GridLines="Radzen.DataGridGridLines.Both"
	Count="@QueryCount">
	<Columns>
		@foreach (var property in typeof(TType).GetProperties())
		{
			@if (property.PropertyType.FullName == typeof(DateTime).FullName
					|| property.PropertyType.FullName == typeof(DateTime?).FullName
					|| property.PropertyType.FullName == typeof(DateTimeOffset).FullName
					|| property.PropertyType.FullName == typeof(DateTimeOffset?).FullName)
			{
				<RadzenDataGridColumn TItem="TType" Property="@property.Name" Title="@GetPropertyHeaderName(property.Name)" FormatString="@DateFormat" />
			}
			else if (ExcludedColumns.Contains(property.Name))
			{
				continue;
			}
			else if (property.Name == "Status")
			{
				<RadzenDataGridColumn TItem="TType" Property="Status" Title="Status">
					<Template>
						@{
							var properties = context.GetType().GetProperties();
							var statusColumnProperty = properties.Single(p => p.Name == "Status");
							var propertyValue = statusColumnProperty.GetValue(context);

							var status = Statuses.FirstOrDefault(s => s.Label == propertyValue!.ToString());

							if(status != null)
							{
								<div class="badge badge-pill" style="font-size:12px;@status.Style">@status.Label</div>
							}
							else
							{
								<div class="badge badge-pill" style="font-size:12px;background-color:#DAD9D9;color:#636262;">@propertyValue</div>
							}
						}
					</Template>
				</RadzenDataGridColumn>

			}
			else
			{
				<RadzenDataGridColumn TItem="TType" Property="@property.Name" Title="@GetPropertyHeaderName(property.Name)" />
			}
		}
	</Columns>
</RadzenDataGrid>
